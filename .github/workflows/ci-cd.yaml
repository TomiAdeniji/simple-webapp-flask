name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: self-hosted

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Debug: List contents of workspace directory
      - name: Debug Workspace Directory Before Deletion
        run: |
          echo "Listing contents of workspace directory before deleting:"
          dir C:\actions-runner\_work\simple-webapp-flask\simple-webapp-flask

      # Force close handles
      - name: Force Close Handles
        run: |
          taskkill /F /IM "git.exe" /T
          taskkill /F /IM "node.exe" /T

      # Attempt to delete directory
      - name: Clean Directory
        run: |
          for /L %%i in (1,1,5) do (
            rd /s /q "C:\actions-runner\_work\simple-webapp-flask\simple-webapp-flask" && exit 0 || (
              echo "Retrying in 5 seconds..."
              timeout /t 5 /nobreak >nul
            )
          )

      # Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:latest
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:buildcache,mode=max

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0'

      # Set up Kubeconfig
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      # Deploy to Kubernetes
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f deployment.yaml || exit 1
          kubectl apply -f service.yaml || exit 1

      # Verify deployment
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/your-deployment-name

      # Rollback on failure
      - name: Rollback on Failure
        if: failure()
        run: |
          kubectl rollout undo deployment/your-deployment-name
