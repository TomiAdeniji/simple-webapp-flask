name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: self-hosted

    steps:
      # Debug: Output current user and directory information
      - name: Debug Info
        shell: pwsh
        run: |
          Write-Host "Current user: $(whoami)"
          Write-Host "Current directory: $(Get-Location)"

      # Check directory permissions
      - name: Check Directory Permissions
        shell: pwsh
        run: |
          icacls "C:\actions-runner\_work\simple-webapp-flask\simple-webapp-flask"

      # Attempt to close any open handles
      - name: Close Handles
        shell: pwsh
        run: |
          Start-Process -FilePath "taskkill" -ArgumentList "/F /IM git.exe /T" -Verb RunAs
          Start-Process -FilePath "taskkill" -ArgumentList "/F /IM node.exe /T" -Verb RunAs
      # Clean workspace before checkout
      - name: Clean Workspace
        shell: pwsh
        run: |
          $path = "C:\actions-runner\_work\simple-webapp-flask\simple-webapp-flask"
          if (Test-Path $path) {
            Get-ChildItem -Path $path -Recurse | Remove-Item -Force -Recurse
            Remove-Item $path -Force -Recurse
          }

      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          timeout-minutes: 15

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:latest
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simple-webapp-flask:buildcache,mode=max

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0'

      # Set up Kubeconfig
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      # Deploy to Kubernetes
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f deployment.yaml || exit 1
          kubectl apply -f service.yaml || exit 1

      # Verify deployment
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/your-deployment-name

      # Rollback on failure
      - name: Rollback on Failure
        if: failure()
        run: |
          kubectl rollout undo deployment/your-deployment-name

  cleanup:
    name: Cleanup
    runs-on: self-hosted
    if: always()
    needs: [build, deploy]

    steps:
      - name: Final Cleanup
        shell: pwsh
        run: |
          $path = "C:\actions-runner\_work\simple-webapp-flask\simple-webapp-flask"
          if (Test-Path $path) {
            Write-Host "Attempting to remove $path"
            Get-ChildItem -Path $path -Recurse | Remove-Item -Force -Recurse -ErrorAction Continue
            Remove-Item $path -Force -Recurse -ErrorAction Continue
            if (Test-Path $path) {
              Write-Host "Failed to completely remove $path"
              Get-ChildItem -Path $path -Recurse | ForEach-Object { $_.FullName }
            } else {
              Write-Host "Successfully removed $path"
            }
          } else {
            Write-Host "Directory $path does not exist"
          }
